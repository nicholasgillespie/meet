@use "../10-functions/theme-accessor" as *;
@use "../20-mixins/media-query" as *;

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  // outline: solid 1px hotpink;
}

// GLOBAL SETTINGS ////////////////////
body {
  // accent-color: ???;
  background: get(color, white);
  color: get(color, gray-blue);
  font-family: get(font-family, base);
  font-size: get(font-size, base);
  font-weight: get(font-weight, base);
  line-height: get(line-height, base);
  letter-spacing: get(letter-spacing, base);
  word-break: break-word;
  font-size-adjust: from-font;
}

// DOCUMENT STRUCTURE ////////////////////
body {
  display: grid;
  grid-template-rows: auto 1fr auto;
}

main {
  // overflow: hidden;
}

// TYPOGRAPHY ////////////////////
:is(h1, h2, h3, h4) {
  font-family: get(font-family, base);
  font-weight: get(font-weight, black);
  line-height: get(line-height, flat);
  color: get(color, dark-blue);
  text-wrap: balance;
  hyphens: auto;
}

h1 {
  font-size: get(font-size, 5);
  max-inline-size: 20ch;
}

h2 {
  font-size: get(font-size, 4);
}

h3 {
  font-size: get(font-size, 3);
}

:is(h4, h5, h6) {
  font-size: get(font-size, 2);
}

@supports not (font-size-adjust: from-font) {
  //
}

// CONTENT ELEMENTS ////////////////////
// TEXT ELEMENTS
p {
  max-inline-size: var(--measure, 66ch);
  text-wrap: pretty;
}

.lede {
  font-size: get(font-size, 1);
  letter-spacing: get(letter-spacing, extra-loose);
  text-transform: uppercase;
  color: get(color, strong-blue);
  font-weight: get(font-weight, black);
}

b {
  // color: get-theme("color", "highlight");
}

// LIST ELEMENTS

// FORM ELEMENTS
form > * + * {
  margin-block-start: var(--flow-space, 1em);
}

:is(input, select, textarea) {
  accent-color: var(--color-accent);
}

:is(
    input:not([type="checkbox"], [type="radio"], [type="color"]),
    select,
    textarea
  ) {
  padding: 0.5em 0.8em;
  border-radius: var(--radius-s);
  border: var(--stroke-solid);
  background: var(--color-dark-glare);
  color: var(--color-light);
  inline-size: 100%;

  &::placeholder {
    color: rgb(255 255 255 / 70%);
  }
}

input,
label {
  line-height: get(line-height, flat);
}

label::after {
  content: "\A";
  white-space: pre;
}

label:has(input) {
  display: flex;
  align-items: flex-start;
  gap: var(--space-gutter);
}

label:has(input) input {
  transform: translateY(0.25ex);
}

label:has(input) + label:has(input) {
  --flow-space: var(--space-m);
  margin-block-start: var(--space-m);
}

// TABLE ELEMENTS
table {
  inline-size: 100%;
  border-collapse: collapse;
  border: none;
}

// IMAGE & SVG ELEMENTS

// INTERACTIVE ELEMENTS ////////////////////
// A ELEMENT SPECIFICS

// BUTTON STYLES

// INTERACTIVE STATES ////////////////////
// SELECTION

// FOCUS AND TARGET STATES
:focus {
  outline: 2px solid var(--focus-color, currentColor);
  // outline-offset: 0.65ch;
  outline-offset: var(--focus-offset, 0.2lh);
}

:target {
  scroll-margin-block: 2ex;
  scroll-margin-block: 5lh;
}

// INTERFACE ELEMENTS ////////////////////
// SELECTION
::selection {
  // color: get-theme("color", "bold");
  // background: get-color("core", "primary");
}

// SKIP LINK
.skip-link {
  &-container {
    position: absolute;
    inset-block-start: 0.5em;
    z-index: 999;
  }

  & {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: nowrap;
    min-block-size: 100%;
    // font-family: get-font-family("code");
    // font-size: get(font-size, step-1);
  }

  &:not(:focus) {
    border: 0;
    clip: rect(0 0 0 0);
    height: auto;
    margin: 0;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap;
  }
}

// SCROLLBAR ////////////////////
